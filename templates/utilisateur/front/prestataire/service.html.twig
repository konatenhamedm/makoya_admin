{% block page_content %}
    {% form_theme form 'widget/fields-block.html.twig' %}
	{% from '_macros/macro_service_prestataire.html.twig' import prototype_ligne_colonne %}
    <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Modification Prestataire | {{ prestataire.denominationSociale }}</h5>
        <div class="btn btn-icon btn-sm  ms-2" data-bs-dismiss="modal" aria-label="Close">
            <span class="svg-icon svg-icon-2x text-white">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor"></rect>
					<rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor"></rect>
				</svg>
            </span>
        </div>
    </div>
    {{ form_start(form, {'attr': {'role':'form', 'class': 'form'}}) }}
    <div class="modal-body card-principal">
		{{ include('_includes/ajax/response.html.twig') }}
	
			{{ prototype_ligne_colonne(form) }}
			<br>
        
	</div>
    <div class="modal-footer">
        {# {{ include('_includes/ajax/loader.html.twig') }} #}
        <button type="button" class="btn btn-default btn-sm" data-bs-dismiss="modal">Annuler</button>
        <button type="submit" class="btn btn-main btn-ajax btn-sm"><span class="spinner-border d-none  spinner-ajax spinner-border-sm" role="status" aria-hidden="true"></span> Valider</button>
    </div>
	{{ form_widget(form._token) }}
	{{ form_end(form, {render_rest: false}) }}
{% endblock %}
{% block java %}
    <script>
     
           $('.categorie').on('change',function (e) {
                
             $res = $(this).closest('.row');

             $id = $(this).val();
          $.ajax({
            url:        '/utilisateur/front/prestataire/liste/souscategorie',
            type:       'get',
             async: false,
            data:     {id:$id},
            dataType:   'json',
            success: function(json){
               
                $res.find('#'+$res.find('.sousCategorie').attr("id")).html(''); //je vide la 2ème list
                $res.find('#'+$res.find('.sousCategorie').attr("id")).append('<option value selected="default">Choisissez</option>');
                $.each(json, function(index, value) { // et une boucle sur la réponse contenu dans la variable passé à la function du success "json"       
                     
                  $res.find("#"+$res.find('.sousCategorie').attr("id")).append('<option value="'+ value.id +'"  >' + value.libelle +'</option>');
             
                });

   

            }
        });

            $.ajax({
            url:        '/utilisateur/front/prestataire/liste/service',
            type:       'get',
             async: false,
            data:     {id:$id},
            dataType:   'json',
            success: function(json){
               
                $res.find('#'+$res.find('.service').attr("id")).html(''); //je vide la 2ème list
                $res.find('#'+$res.find('.service').attr("id")).append('<option value selected="default">Choisissez</option>');
                $.each(json, function(index, value) { // et une boucle sur la réponse contenu dans la variable passé à la function du success "json"       
                    
                  $res.find("#"+$res.find('.service').attr("id")).append('<option value="'+ value.id +'"  >' + value.libelle +'</option>');
             
                });

   

            }
        });
        });
     

     
        $(function () {

            

          init_select2('select',null,'#exampleModalSizeLg2');
			//init_select2('select');
            KTImageInput.createInstances();
            var imageInputElement = document.querySelector("#kt_image_input_control");
            var imageInput = KTImageInput.getInstance(imageInputElement);
        });

        $(function () {
            const $container = $('.row-colonne');

            var index = $container.length;


            const $addLink = $('.add_line');
               addDeleteLink($container);
            $addLink.click(function(e) {
                const $this  = $(this);
                const proto_class = $this.attr('data-protoclass');
                const name = $this.attr('data-protoname');
                const $container = $($this.attr('data-container'));



                addLine($container, name, proto_class);



                e.preventDefault(); // évite qu'un # apparaisse dans l'URL

				//init_select2('select', null, '#exampleModalSizeSm2');
            KTImageInput.createInstances();
            var imageInputElement = document.querySelector("#kt_image_input_control");
            var imageInput = KTImageInput.getInstance(imageInputElement);

            $('.categorie').on('change',function (e) {
                
             $res = $container;

             $id = $(this).val();
          $.ajax({
            url:        '/utilisateur/front/prestataire/liste/souscategorie',
            type:       'get',
             async: false,
            data:     {id:$id},
            dataType:   'json',
            success: function(json){
               
                $res.find('#'+$res.find('.sousCategorie').attr("id")).html(''); //je vide la 2ème list
                $res.find('#'+$res.find('.sousCategorie').attr("id")).append('<option value selected="default">Choisissez</option>');
                $.each(json, function(index, value) { // et une boucle sur la réponse contenu dans la variable passé à la function du success "json"       
                     
                  $res.find("#"+$res.find('.sousCategorie').attr("id")).append('<option value="'+ value.id +'"  >' + value.libelle +'</option>');
             
                });

   

            }
        });

            $.ajax({
            url:        '/utilisateur/front/prestataire/liste/service',
            type:       'get',
             async: false,
            data:     {id:$id},
            dataType:   'json',
            success: function(json){
               
                $res.find('#'+$res.find('.service').attr("id")).html(''); //je vide la 2ème list
                $res.find('#'+$res.find('.service').attr("id")).append('<option value selected="default">Choisissez</option>');
                $.each(json, function(index, value) { // et une boucle sur la réponse contenu dans la variable passé à la function du success "json"       
                    
                  $res.find("#"+$res.find('.service').attr("id")).append('<option value="'+ value.id +'" >' + value.libelle +'</option>');
             
                });

   

            }
        });
        });

        ///Finnnnnn
            });
            // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
            /*if (index == 0) {
            addimputation($container);
            } else {*/
            if (index > 0) {
                $container.children('.row-column').each(function() {
                    const $this = $(this);
                    addDeleteLink($this);
                    $this.find("select").each(function() {
                        const $this = $(this);
                        init_select2($this, null, '#exampleModalSizeSm2');
                    });
                });

            }




            // La fonction qui ajoute un formulaire Categorie
            function addLine($container, name, proto_class) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ

                var $prototype = $($(proto_class).attr('data-prototype')
                    .replace(new RegExp(name + 'label__', 'g'), 'Colonne ' + (index+1))
                    .replace(new RegExp(name, 'g'), index));


                init_select2($prototype.find('select'), null, '#exampleModalSizeSm2');


                // On ajoute au prototype un lien pour pouvoir supprimer la prestation
                addDeleteLink($prototype, name);
                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.prepend($prototype);

                index++;
            }


            function addDeleteLink($prototype, name = null) {
                // Création du lien
                $deleteLink = $('<a href="#" class="btn btn-danger btn-xs" style="margin-top: 21px; margin-left: -16px;"><span class="fa fa-trash"></span></a>');
                // Ajout du lien
                $prototype.find(".del-col").append($deleteLink);



                // Ajout du listener sur le clic du lien
                $deleteLink.click(function(e) {
                    const $this = $(this);
                    const $parent = $this.closest($this.parent('div').attr('data-parent'));

                    //console.log($(this).attr('data-parent'), $(this));
                    $parent.remove();

                    if (index > 0) {
                        index -= 1;
                    }

                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                });
            }


            $(document).on('select2:select', '.select-type', function (e) {
                const $this = $(this);
                let field_str = $this.find('option:selected').attr('data-require-fields');
                const $parent = $this.closest('.row-colonne');
                let fields = [];
                if (typeof field_str != 'undefined') {
                    fields = field_str.split(',');
                    for (let field of fields ) {
                        $parent.find('.' + field).removeClass('d-none');
                    }
                } else {
                    $parent.find('.source,.valeurs').addClass('d-none');
                }
            });
        })

    </script>
{% endblock %}